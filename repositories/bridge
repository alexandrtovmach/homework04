var db = require('../db');

//users actions in db
exports.findAllUsers = function (callback) {
    db.get().collection('users').find().toArray(function (err, docs) {
        callback(err, docs)
    })
};

exports.findOneUser = function (id, callback) {
   db.get().collection('users').findOne({ userId: id }, function (err, docs) {
       callback(err, docs)
   })
};

exports.addOneUser = function (user, callback) {
    db.get().collection('users').insertOne(user, function (err, docs) {
        callback(err, docs)
    })
};

exports.updateOneUser = function (id, newUser, callback) {
    db.get().collection('users').updateOne({userId: id}, newUser, function (err, docs) {
        callback(err, docs)
    });
};


exports.removeOneUser = function (id, callback) {
    db.get().collection('users').removeOne({userId: id}, function (err, docs) {
        callback(err, docs)
    })
};

//chat actions in db

exports.findAllComments = function (callback) {
    db.get().collection('comments').find().sort({dateOfPost: -1}).toArray(function (err, docs) {
        callback(err, docs)
    })
};

exports.findOneComment = function (dateOfPost, callback) {
    db.get().collection('comments').find({dateOfPost: dateOfPost}, function (err, docs) {
        callback(err, docs)
    })
};

exports.addOneComment = function (comment, callback) {
    db.get().collection('comments').insertOne(comment, function (err, docs) {
        callback(err, docs)
    })
};

exports.updateOneComment = function (dateOfPost, editedComment, callback) {
    db.get().collection('comments').updateOne({dateOfPost: dateOfPost}, editedComment, function (err, docs) {
        callback(err, docs)
    })
};

exports.removeOneComment = function (dateOfPost, callback) {
    db.get().collection('comments').removeOne({dateOfPost: dateOfPost}, function (err, docs) {
        callback(err, docs)
    })
};

exports.findAllContacts = function (id, callback) {
    db.get().collection('comments').find({ $or: [{ senderId: id }, {reciverId: id}]}, {_id: 0}).toArray(function (err, docs) {
        callback(err, docs)
    });
};